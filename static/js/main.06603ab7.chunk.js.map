{"version":3,"sources":["ErrorMessage.js","SignMessage.js","App.js","index.js"],"names":["ErrorMessage","message","className","xmlns","fill","viewBox","d","signMessage","setError","console","log","window","ethereum","Error","send","provider","ethers","providers","Web3Provider","signer","getSigner","getAddress","address","request","method","params","utils","keccak256","formatBytes32String","signature","SignMessage","resultBox","useRef","useState","signatures","setSignatures","error","handleSign","e","preventDefault","data","FormData","target","get","sig","onSubmit","required","type","name","placeholder","map","idx","readOnly","ref","value","App","rootElement","document","getElementById","ReactDOM","render"],"mappings":"+XAAe,SAASA,EAAa,GAAc,IAAZC,EAAO,EAAPA,QACrC,OAAKA,EAGH,qBAAKC,UAAU,oBAAmB,SAChC,sBAAKA,UAAU,SAAQ,UACrB,qBACEC,MAAM,6BACNC,KAAK,OACLC,QAAQ,YACRH,UAAU,8BAA6B,SAEvC,sBACE,iBAAe,QACf,kBAAgB,QAChB,eAAa,IACbI,EAAE,qGAGN,gCAAQL,SAlBO,IAsBvB,CCnBA,IAAMM,EAAW,iDAAG,yGAES,GAFAC,EAAQ,EAARA,SAAUP,EAAO,EAAPA,QAAO,SAE1CQ,QAAQC,IAAI,CAAET,YACTU,OAAOC,SAAS,CAAD,qBACZ,IAAIC,MAAM,8CAA8C,KAAD,kBAEzDF,OAAOC,SAASE,KAAK,uBAAuB,KAAD,EAEd,OAD7BC,EAAW,IAAIC,IAAOC,UAAUC,aAAaP,OAAOC,UACpDO,EAASJ,EAASK,YAAY,EAAD,QACbD,EAAOE,aAAa,KAAD,GAA5B,OAAPC,EAAO,iBACWX,OAAOC,SAASW,QAAQ,CAACC,OAAO,WAAYC,OAAO,CAACH,EAASN,IAAOU,MAAMC,UAAUX,IAAOU,MAAME,oBAAoB3B,OAAa,KAAD,GAA1I,OAAT4B,EAAS,yBAER,CACL5B,UACA4B,YACAP,YACD,kCAEDd,EAAS,KAAIP,SAAS,0DAEzB,gBApBgB,sCAsBF,SAAS6B,IACtB,IAAMC,EAAYC,mBAClB,EAAoCC,mBAAS,IAAG,mBAAzCC,EAAU,KAAEC,EAAa,KAChC,EAA0BF,qBAAU,mBAA7BG,EAAK,KAAE5B,EAAQ,KAEhB6B,EAAU,iDAAG,WAAOC,GAAC,mFAGd,OAFXA,EAAEC,iBACIC,EAAO,IAAIC,SAASH,EAAEI,QAC5BlC,IAAW,SACOD,EAAY,CAC5BC,WACAP,QAASuC,EAAKG,IAAI,aACjB,KAAD,GAHIC,EAAG,SAKPT,EAAc,GAAD,mBAAKD,GAAU,CAAEU,KAC/B,2CACF,gBAXe,sCAahB,OACE,sBAAM1C,UAAU,MAAM2C,SAAUR,EAAW,SACzC,sBAAKnC,UAAU,2DAA0D,UACvE,uBAAMA,UAAU,WAAU,UACxB,oBAAIA,UAAU,kDAAiD,2BAG/D,qBAAKA,UAAU,GAAE,SACf,qBAAKA,UAAU,OAAM,SACnB,0BACE4C,UAAQ,EACRC,KAAK,OACLC,KAAK,UACL9C,UAAU,uEACV+C,YAAY,mBAKpB,yBAAQ/C,UAAU,MAAK,UACrB,wBACE6C,KAAK,SACL7C,UAAU,qEAAoE,0BAIhF,cAACF,EAAY,CAACC,QAASmC,OAExBF,EAAWgB,KAAI,SAACN,EAAKO,GACpB,OACE,qBAAKjD,UAAU,MAAK,SAClB,sBAAKA,UAAU,OAAM,UACnB,yCACWiD,EAAM,EAAC,KAAIP,EAAI3C,WAE1B,yCAAY2C,EAAItB,WAChB,0BACEyB,KAAK,OACLK,UAAQ,EACRC,IAAKtB,EACL7B,UAAU,uEACV+C,YAAY,sBACZK,MAAOV,EAAIf,gBAZSe,EAiB9B,QAIR,CC5Fe,SAASW,IACtB,OACE,qBAAKrD,UAAU,iBAAgB,SAC7B,qBAAKA,UAAU,kBAAiB,SAC9B,cAAC4B,EAAW,OAIpB,CCNA,IAAM0B,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAU,UACT,cAACL,EAAG,MAENC,E","file":"static/js/main.06603ab7.chunk.js","sourcesContent":["export default function ErrorMessage({ message }) {\n  if (!message) return null;\n\n  return (\n    <div className=\"alert alert-error\">\n      <div className=\"flex-1\">\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          className=\"w-6 h-6 mx-2 stroke-current\"\n        >\n          <path\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n            stroke-width=\"2\"\n            d=\"M18.364 18.364A9 9 0 005.636 5.636m12.728 12.728A9 9 0 015.636 5.636m12.728 12.728L5.636 5.636\"\n          ></path>\n        </svg>\n        <label>{message}</label>\n      </div>\n    </div>\n  );\n}\n","import { useState, useRef } from \"react\";\nimport { ethers } from \"ethers\";\nimport ErrorMessage from \"./ErrorMessage\";\n\nconst signMessage = async ({ setError, message }) => {\n  try {\n    console.log({ message });\n    if (!window.ethereum)\n      throw new Error(\"No crypto wallet found. Please install it.\");\n\n    await window.ethereum.send(\"eth_requestAccounts\");\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const signer = provider.getSigner();\n    const address = await signer.getAddress();\n    const signature = await window.ethereum.request({method:'eth_sign', params:[address, ethers.utils.keccak256(ethers.utils.formatBytes32String(message))]});\n\n    return {\n      message,\n      signature,\n      address\n    };\n  } catch (err) {\n    setError(err.message);\n  }\n};\n\nexport default function SignMessage() {\n  const resultBox = useRef();\n  const [signatures, setSignatures] = useState([]);\n  const [error, setError] = useState();\n\n  const handleSign = async (e) => {\n    e.preventDefault();\n    const data = new FormData(e.target);\n    setError();\n    const sig = await signMessage({\n      setError,\n      message: data.get(\"message\")\n    });\n    if (sig) {\n      setSignatures([...signatures, sig]);\n    }\n  };\n\n  return (\n    <form className=\"m-4\" onSubmit={handleSign}>\n      <div className=\"credit-card w-full shadow-lg mx-auto rounded-xl bg-white\">\n        <main className=\"mt-4 p-4\">\n          <h1 className=\"text-xl font-semibold text-gray-700 text-center\">\n            Sign messages\n          </h1>\n          <div className=\"\">\n            <div className=\"my-3\">\n              <textarea\n                required\n                type=\"text\"\n                name=\"message\"\n                className=\"textarea w-full h-24 textarea-bordered focus:ring focus:outline-none\"\n                placeholder=\"Message\"\n              />\n            </div>\n          </div>\n        </main>\n        <footer className=\"p-4\">\n          <button\n            type=\"submit\"\n            className=\"btn btn-primary submit-button focus:ring focus:outline-none w-full\"\n          >\n            Sign message\n          </button>\n          <ErrorMessage message={error} />\n        </footer>\n        {signatures.map((sig, idx) => {\n          return (\n            <div className=\"p-2\" key={sig}>\n              <div className=\"my-3\">\n                <p>\n                  Message {idx + 1}: {sig.message}\n                </p>\n                <p>Signer: {sig.address}</p>\n                <textarea\n                  type=\"text\"\n                  readOnly\n                  ref={resultBox}\n                  className=\"textarea w-full h-24 textarea-bordered focus:ring focus:outline-none\"\n                  placeholder=\"Generated signature\"\n                  value={sig.signature}\n                />\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </form>\n  );\n}\n","import SignMessage from \"./SignMessage\";\nimport VerifyMessage from \"./VerifyMessage\";\n\nexport default function App() {\n  return (\n    <div className=\"flex flex-wrap\">\n      <div className=\"w-full lg:w-1/2\">\n        <SignMessage />\n      </div>\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}